<?php
/**
 * @file
 * Mobile Codes core functions.
 */

/**
 * Include additional files.
 */
foreach (module_list() as $module) {
  if (file_exists($file = dirname(__FILE__) . "/includes/{$module}.inc")) {
    require_once $file;
  }
}

/**
 * Implements hook_init().
 */
function mobile_codes_init() {
  if (!module_exists('ctools')) {
    module_enable(array('ctools'));
    if (!module_exists('ctools')) {
      drupal_set_message(t('Mobile Codes has been disabled as the required !ctools module is not present.', array('!ctools' => l(t('Chaos tool suite'), 'http://drupal.org/project/ctools'))), 'error');
      module_disable(array('mobile_codes'));
    }
  }
}

/**
 * Implements hook_perm().
 */
function mobile_codes_perm() {
  return array('administer mobile codes');
}

/**
 * Implements hook_menu_alter().
 */
function mobile_codes_menu_alter(&$items) {
  // @TODO - Make this better.
  if (isset($items['admin/settings/mobile_codes/presets'])) {
    $items['admin/settings/mobile_codes'] = array_merge(
      $items['admin/settings/mobile_codes/presets'],
      array(
        'title' => 'Mobile Codes',
        'type' => MENU_NORMAL_ITEM,
      )
    );
    $items['admin/settings/mobile_codes/presets']['type'] = MENU_DEFAULT_LOCAL_TASK;
    $items['admin/settings/mobile_codes/presets']['parent'] = 'admin/settings/mobile_codes';
    $items['admin/settings/mobile_codes/providers']['type'] = MENU_LOCAL_TASK;
    $items['admin/settings/mobile_codes/providers']['parent'] = 'admin/settings/mobile_codes';
  }
}

/**
 * Implements hook_mobile_codes_theme_alter().
 */
function mobile_codes_mobile_codes_theme_alter($items) {
  $items['mobilecode'] = array(
    'arguments' => array(
      'text' => NULL,
      'data' => array(),
    ),
  );
}

/**
 * Generate a mobile code.
 */
function mobile_codes_generate($url) {
  if (!file_exists($file = file_directory_path() . '/mobile_codes/' . md5(serialize($url)) . '.png')) {
    $request = drupal_http_request($url);
    if ($request->code == 200) {
      if (file_check_directory($dir = file_directory_path() . '/mobile_codes', FILE_CREATE_DIRECTORY)) {
        file_save_data($request->data, $file);
      }
    }

    else {
      return FALSE;
    }
  }
  return $file;
}

/**
 * Theme function for displaying Mobile Codes
 */
function theme_mobilecode($text, $data) {
  if (isset($data['#preset']) || isset($data['#provider'])) {
    ctools_include('export');
    if (isset($data['#preset'])) {
      $preset = clone(ctools_export_crud_load('mobile_codes_presets', $data['#preset']));
      $data['#provider'] = $preset->provider;
      $data = array_merge($data, $preset->defaults);
    }

    $provider = clone(ctools_export_crud_load('mobile_codes_providers', $data['#provider']));
    foreach (element_children($provider->parameters) as $parameter) {
      if (!isset($data[$parameter])) {
        switch ($provider->parameters[$parameter]['type']) {
          case 'data':
            $data[$parameter] = urlencode($text);
            break;

          case 'select':
            $provider->parameters[$parameter]['value'] = explode("\n", $provider->parameters[$parameter]['value']);
            $provider->parameters[$parameter]['value'][0] = explode("|", $provider->parameters[$parameter]['value'][0]);
            $data[$parameter] = $provider->parameters[$parameter]['value'][0][0];
            break;

          case 'text':
            drupal_set_message(t('Mobile Codes argument %arg missing.', array('%arg' => $parameter)), 'error');
            return '';
        }
      }
      $provider->url = str_replace("[{$parameter}]", $data[$parameter], $provider->url);
    }

    if ($file = mobile_codes_generate($provider->url)) {
      return theme('image', $file);
    }
  }

  drupal_set_message(t('Bad call to theme_mobilecode().'), 'error');
  return '';
}
